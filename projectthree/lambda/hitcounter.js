"use strict";
const { DynamoDB, Lambda } = require('aws-sdk');
exports.handler = async function (event) {
    console.log("request:", JSON.stringify(event, undefined, 2));
    // create AWS SDK clients
    const dynamo = new DynamoDB();
    const lambda = new Lambda();
    // update dynamo entry for "path" with hits++
    await dynamo.updateItem({
        TableName: process.env.HITS_TABLE_NAME,
        Key: { path: { S: event.path } },
        UpdateExpression: 'ADD hits :incr',
        ExpressionAttributeValues: { ':incr': { N: '1' } }
    }).promise();
    // call downstream function and capture response
    const resp = await lambda.invoke({
        FunctionName: process.env.DOWNSTREAM_FUNCTION_NAME,
        Payload: JSON.stringify(event)
    }).promise();
    console.log('downstream response:', JSON.stringify(resp, undefined, 2));
    // return response back to upstream caller
    return JSON.parse(resp.Payload);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGl0Y291bnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhpdGNvdW50ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRWhELE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxXQUFVLEtBQVM7SUFDeEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFN0QseUJBQXlCO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7SUFDOUIsTUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQztJQUU1Qiw2Q0FBNkM7SUFDN0MsTUFBTSxNQUFNLENBQUMsVUFBVSxDQUFDO1FBQ3RCLFNBQVMsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWU7UUFDdEMsR0FBRyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUNoQyxnQkFBZ0IsRUFBRSxnQkFBZ0I7UUFDbEMseUJBQXlCLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUU7S0FDbkQsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBRWIsZ0RBQWdEO0lBQ2hELE1BQU0sSUFBSSxHQUFHLE1BQU0sTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUMvQixZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0I7UUFDbEQsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO0tBQy9CLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUViLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFeEUsMENBQTBDO0lBQzFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbEMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBEeW5hbW9EQiwgTGFtYmRhIH0gPSByZXF1aXJlKCdhd3Mtc2RrJyk7XHJcblxyXG5leHBvcnRzLmhhbmRsZXIgPSBhc3luYyBmdW5jdGlvbihldmVudDphbnkpIHtcclxuICBjb25zb2xlLmxvZyhcInJlcXVlc3Q6XCIsIEpTT04uc3RyaW5naWZ5KGV2ZW50LCB1bmRlZmluZWQsIDIpKTtcclxuXHJcbiAgLy8gY3JlYXRlIEFXUyBTREsgY2xpZW50c1xyXG4gIGNvbnN0IGR5bmFtbyA9IG5ldyBEeW5hbW9EQigpO1xyXG4gIGNvbnN0IGxhbWJkYSA9IG5ldyBMYW1iZGEoKTtcclxuXHJcbiAgLy8gdXBkYXRlIGR5bmFtbyBlbnRyeSBmb3IgXCJwYXRoXCIgd2l0aCBoaXRzKytcclxuICBhd2FpdCBkeW5hbW8udXBkYXRlSXRlbSh7XHJcbiAgICBUYWJsZU5hbWU6IHByb2Nlc3MuZW52LkhJVFNfVEFCTEVfTkFNRSxcclxuICAgIEtleTogeyBwYXRoOiB7IFM6IGV2ZW50LnBhdGggfSB9LFxyXG4gICAgVXBkYXRlRXhwcmVzc2lvbjogJ0FERCBoaXRzIDppbmNyJyxcclxuICAgIEV4cHJlc3Npb25BdHRyaWJ1dGVWYWx1ZXM6IHsgJzppbmNyJzogeyBOOiAnMScgfSB9XHJcbiAgfSkucHJvbWlzZSgpO1xyXG5cclxuICAvLyBjYWxsIGRvd25zdHJlYW0gZnVuY3Rpb24gYW5kIGNhcHR1cmUgcmVzcG9uc2VcclxuICBjb25zdCByZXNwID0gYXdhaXQgbGFtYmRhLmludm9rZSh7XHJcbiAgICBGdW5jdGlvbk5hbWU6IHByb2Nlc3MuZW52LkRPV05TVFJFQU1fRlVOQ1RJT05fTkFNRSxcclxuICAgIFBheWxvYWQ6IEpTT04uc3RyaW5naWZ5KGV2ZW50KVxyXG4gIH0pLnByb21pc2UoKTtcclxuXHJcbiAgY29uc29sZS5sb2coJ2Rvd25zdHJlYW0gcmVzcG9uc2U6JywgSlNPTi5zdHJpbmdpZnkocmVzcCwgdW5kZWZpbmVkLCAyKSk7XHJcblxyXG4gIC8vIHJldHVybiByZXNwb25zZSBiYWNrIHRvIHVwc3RyZWFtIGNhbGxlclxyXG4gIHJldHVybiBKU09OLnBhcnNlKHJlc3AuUGF5bG9hZCk7XHJcbn07XHJcbiJdfQ==